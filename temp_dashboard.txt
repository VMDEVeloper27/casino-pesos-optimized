  return <DashboardClient locale={locale} />;
}

// Client component code moved to DashboardClient.tsx
/*
'use client';

import { useSession } from 'next-auth/react';
import { redirect } from 'next/navigation';
import { useState, useEffect } from 'react';
import { motion } from 'framer-motion';
import Link from 'next/link';
import { 
  User, 
  Trophy, 
  Calendar, 
  TrendingUp, 
  Star, 
  Gift, 
  Clock,
  ArrowRight,
  CreditCard,
  DollarSign,
  Percent,
  Award,
  Heart,
  Settings,
  Bell
} from 'lucide-react';

export default function DashboardPage({ params }: { params: Promise<{ locale: string }> }) {
  const { data: session, status } = useSession();
  const [locale, setLocale] = useState('es');

  useEffect(() => {
    params.then(p => setLocale(p.locale));
  }, [params]);

  // Redirect if not authenticated
  if (status === 'loading') {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <div className="animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-green-600"></div>
      </div>
    );
  }

  if (status === 'unauthenticated') {
    redirect(`/${locale}/auth/signin`);
  }

  const stats = [
    {
      icon: Trophy,
      label: 'Bonos Reclamados',
      value: '12',
      change: '+3 este mes',
      color: 'text-yellow-600',
      bgColor: 'bg-yellow-50',
    },
    {
      icon: DollarSign,
      label: 'Cashback Total',
      value: '$450',
      change: '+$120 este mes',
      color: 'text-green-600',
      bgColor: 'bg-green-50',
    },
    {
      icon: Star,
      label: 'Reseñas Escritas',
      value: '8',
      change: '2 pendientes',
      color: 'text-blue-600',
      bgColor: 'bg-blue-50',
    },
    {
      icon: Award,
      label: 'Nivel VIP',
      value: 'Gold',
      change: '2,500 pts para Platinum',
      color: 'text-purple-600',
      bgColor: 'bg-purple-50',
    },
  ];

  const recentActivity = [
    {
      type: 'bonus',
      title: 'Bono de bienvenida reclamado',
      casino: 'Casino Royale',
      amount: '100% hasta $500',
      date: 'Hace 2 días',
      icon: Gift,
    },
    {
      type: 'review',
      title: 'Reseña publicada',
      casino: 'Lucky Vegas',
      rating: 4.5,
      date: 'Hace 5 días',
      icon: Star,
    },
    {
      type: 'cashback',
      title: 'Cashback recibido',
      casino: 'Golden Palace',
      amount: '$75',
      date: 'Hace 1 semana',
      icon: DollarSign,
    },
  ];

  const recommendedCasinos = [
    {
      name: 'Casino Estrella',
      bonus: '200% hasta $1000',
      rating: 4.8,
      games: 2500,
      exclusive: true,
    },
    {
      name: 'Fortune Palace',
      bonus: '150% + 100 Giros',
      rating: 4.6,
      games: 1800,
      exclusive: false,
    },
    {
      name: 'Royal Flush',
      bonus: '100% hasta $750',
      rating: 4.7,
      games: 3000,
      exclusive: true,
    },
  ];

  return (
    <div className="min-h-screen bg-gray-50">
      <div className="container mx-auto px-4 py-8">
        {/* Welcome Header */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          className="mb-8"
        >
          <h1 className="text-3xl font-bold text-gray-900 mb-2">
            {locale === 'es' ? 'Bienvenido de vuelta' : 'Welcome back'}, {session?.user?.name || session?.user?.email?.split('@')[0]}!
          </h1>
          <p className="text-gray-600">
            {locale === 'es' ? 'Aquí está tu resumen de actividad y ofertas exclusivas' : "Here's your activity summary and exclusive offers"}
          </p>
        </motion.div>

        {/* Stats Grid */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
          {stats.map((stat, index) => (
            <motion.div
              key={stat.label}
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ delay: index * 0.1 }}
              className="bg-white rounded-xl shadow-sm border border-gray-200 p-6"
            >
              <div className="flex items-start justify-between">
                <div>
                  <div className={`${stat.bgColor} ${stat.color} w-12 h-12 rounded-lg flex items-center justify-center mb-3`}>
                    <stat.icon className="w-6 h-6" />
                  </div>
                  <p className="text-sm text-gray-600 mb-1">{stat.label}</p>
                  <p className="text-2xl font-bold text-gray-900">{stat.value}</p>
                  <p className="text-xs text-gray-500 mt-1">{stat.change}</p>
                </div>
              </div>
            </motion.div>
          ))}
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
          {/* Recent Activity */}
          <motion.div
            initial={{ opacity: 0, x: -20 }}
            animate={{ opacity: 1, x: 0 }}
            className="lg:col-span-2"
          >
            <div className="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
              <h2 className="text-xl font-bold text-gray-900 mb-4 flex items-center gap-2">
                <Clock className="w-5 h-5 text-green-600" />
                {locale === 'es' ? 'Actividad Reciente' : 'Recent Activity'}
              </h2>
              <div className="space-y-4">
                {recentActivity.map((activity, index) => (
                  <div key={index} className="flex items-start gap-4 p-4 bg-gray-50 rounded-lg">
                    <div className={`w-10 h-10 rounded-full flex items-center justify-center
                      ${activity.type === 'bonus' ? 'bg-green-100 text-green-600' :
                        activity.type === 'review' ? 'bg-blue-100 text-blue-600' :
                        'bg-yellow-100 text-yellow-600'}`}>
                      <activity.icon className="w-5 h-5" />
                    </div>
                    <div className="flex-1">
                      <p className="font-medium text-gray-900">{activity.title}</p>
                      <p className="text-sm text-gray-600">{activity.casino}</p>
                      {activity.amount && (
                        <p className="text-sm font-semibold text-green-600 mt-1">{activity.amount}</p>
                      )}
                      {activity.rating && (
                        <div className="flex items-center gap-1 mt-1">
                          {[...Array(5)].map((_, i) => (
                            <Star key={i} className={`w-4 h-4 ${i < Math.floor(activity.rating) ? 'text-yellow-500 fill-current' : 'text-gray-300'}`} />
                          ))}
                          <span className="text-sm text-gray-600 ml-1">{activity.rating}</span>
                        </div>
                      )}
                    </div>
                    <p className="text-xs text-gray-500">{activity.date}</p>
                  </div>
                ))}
              </div>
              <Link 
                href={`/${locale}/dashboard/activity`}
                className="mt-4 inline-flex items-center gap-2 text-green-600 hover:text-green-700 font-medium"
              >
                {locale === 'es' ? 'Ver toda la actividad' : 'View all activity'}
                <ArrowRight className="w-4 h-4" />
              </Link>
            </div>
          </motion.div>

          {/* Recommended Casinos */}
          <motion.div
            initial={{ opacity: 0, x: 20 }}
            animate={{ opacity: 1, x: 0 }}
          >
            <div className="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
              <h2 className="text-xl font-bold text-gray-900 mb-4 flex items-center gap-2">
                <TrendingUp className="w-5 h-5 text-green-600" />
                {locale === 'es' ? 'Recomendados' : 'Recommended'}
              </h2>
              <div className="space-y-4">
                {recommendedCasinos.map((casino, index) => (
                  <div key={index} className="border border-gray-200 rounded-lg p-4 hover:border-green-500 transition-colors">
                    <div className="flex items-start justify-between mb-2">
                      <h3 className="font-semibold text-gray-900">{casino.name}</h3>
                      {casino.exclusive && (
                        <span className="px-2 py-1 bg-gradient-to-r from-green-500 to-green-600 text-white text-xs font-bold rounded">
                          EXCLUSIVO
                        </span>
                      )}
                    </div>
                    <p className="text-sm font-semibold text-green-600 mb-2">{casino.bonus}</p>
                    <div className="flex items-center justify-between text-sm text-gray-600">
                      <div className="flex items-center gap-1">
                        <Star className="w-4 h-4 text-yellow-500 fill-current" />
                        <span>{casino.rating}</span>
                      </div>
                      <span>{casino.games} juegos</span>
                    </div>
                    <Link 
                      href={`/${locale}/casinos/${casino.name.toLowerCase().replace(' ', '-')}`}
                      className="mt-3 block w-full text-center py-2 bg-green-600 hover:bg-green-700 text-white font-medium rounded-lg transition-colors"
                    >
                      {locale === 'es' ? 'Reclamar Bono' : 'Claim Bonus'}
                    </Link>
                  </div>
                ))}
              </div>
            </div>
          </motion.div>
        </div>

        {/* Quick Actions */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.3 }}
          className="mt-8 grid grid-cols-1 md:grid-cols-3 gap-4"
        >
          <Link 
            href={`/${locale}/dashboard/bonuses`}
            className="bg-gradient-to-r from-green-500 to-green-600 text-white rounded-xl p-6 hover:from-green-600 hover:to-green-700 transition-all transform hover:scale-105"
          >
            <Gift className="w-8 h-8 mb-3" />
            <h3 className="font-semibold text-lg mb-1">
              {locale === 'es' ? 'Mis Bonos' : 'My Bonuses'}
            </h3>
            <p className="text-green-100 text-sm">
              {locale === 'es' ? 'Ver y gestionar tus bonos activos' : 'View and manage your active bonuses'}
            </p>
          </Link>

          <Link 
            href={`/${locale}/dashboard/favorites`}
            className="bg-white border-2 border-gray-200 text-gray-900 rounded-xl p-6 hover:border-red-500 transition-all transform hover:scale-105"
          >
            <Heart className="w-8 h-8 mb-3 text-red-500 fill-red-500" />
            <h3 className="font-semibold text-lg mb-1">
              {locale === 'es' ? 'Mis Favoritos' : 'My Favorites'}
            </h3>
            <p className="text-gray-600 text-sm">
              {locale === 'es' ? 'Casinos y juegos guardados' : 'Saved casinos and games'}
